############################################################
#
# 用户微服务
# web访问端口号  约定：8003
#
############################################################
server:
  port: 8003
  tomcat:
    uri-encoding: UTF-8
    max-swallow-size: -1  # tomcat默认大小2M，超过2M的文件不会被捕获，需要调整此处大小为100MB或者-1即可

############################################################
#
# 配置项目信息
#
############################################################
spring:
  application:
    name: service-user
#  profiles:
#    active: dev   # yml中配置文件的环境配置，dev：开发环境，test：测试环境，prod：生产环境
  datasource:                                         # 数据源的相关配置
    type: com.zaxxer.hikari.HikariDataSource          # 数据源类型：HikariCP
    driver-class-name: com.mysql.jdbc.Driver          # mysql驱动
    url: jdbc:mysql://localhost:3306/personal_web?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
    username: root
    password: root
    hikari:
      connection-timeout: 30000       # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:30秒
      minimum-idle: 5                 # 最小连接数
      maximum-pool-size: 20           # 最大连接数
      auto-commit: true               # 自动提交
      idle-timeout: 600000            # 连接超时的最大时长（毫秒），超时则被释放（retired），默认:10分钟
      pool-name: DateSourceHikariCP     # 连接池名字
      max-lifetime: 1800000           # 连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟 1800000ms
      connection-test-query: SELECT 1
  redis:
    port: 6379
    database: 0  #使用redis中第几个库
    host: 127.0.0.1
  rabbitmq:
    host: 10.211.55.9
    port: 5672
    username: guest
    password: guest
    virtual-host: capture
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  cloud:
    stream: # 本项目stream是个demo 详见stream包 和 HelloController 没有实际应用
      bindings:                           # 绑定通道和交换机
        myOutput:                         # 定义生产者的通道
          # 自定义交换机的名字，也就是代码里构建的消息，交给底层mq的交换机
          destination: streamExchange
        myInput:                          # 定义消费者的通道
          # 自定义交换机的名字，也就是消息从底层mq输入到消费端进行消费
          destination: streamExchange
          group: girls
    zipkin:
      # 配置zipkin采集的服务地址，数据会发送到这里
      base-url: http://127.0.0.1:9411/
      sender:
        # 数据采集的传输通信方式，web http的形式
        type: web
    sleuth:
      sampler:
        # 数据采样比例（百分数），0~1
        probability: 0.8
############################################################
#
# mybatis 配置 mapper 配置
#
############################################################
mybatis:
  type-aliases-package: com.capture.pojo          # 所有POJO类所在包路径
  mapper-locations: classpath:mapper/*.xml      # mapper映射文件
  configuration: #开启mybatis的日志打印
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# 通用 Mapper 配置
mapper:
  mappers: com.capture.my.mapper.MyMapper
  not-empty: false    # 在进行数据库操作的的时候，判断表达式 username != null, 是否追加 username != ''
  identity: MYSQL
# 分页插件配置
pagehelper:
  helperDialect: mysql
  supportMethodsArguments: true

############################################################
#  以下springCloud相关配置
# eureka client 配置信息
#
############################################################
eureka:
   #自定义eureka server的信息
  server:
    hostname: eureka
    port: 7000
  client:
    # 所有的微服务都必须注册到eureka中
    register-with-eureka: true
    # 从注册中心获得检索服务实例
    fetch-registry: true
    # 注册中心的服务地址
    service-url:
      defaultZone: http://eureka-cluster:7001/eureka/,http://eureka:7000/eureka/
# 配置hystrix
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000   # 设置hystrix超时时间，超过10秒触发降级
      circuitBreaker:   # 配置断路器
        enabled: true
        requestVolumeThreshold: 30    # 触发熔断最小请求次数，默认：20
        sleepWindowInMilliseconds: 5000    # 熔断后过几秒后尝试半开状态（请求重试），默认：5s
        errorThresholdPercentage: 50  # 触发熔断的失败率（异常率/阈值），默认：50




############################################################
#
# 项目中所用到的变量配置
#
############################################################
# 新增用户定义临时头像
userFace:
  temp-face: http://10.211.55.9:8888/capture/M00/00/00/CtM3CWIvMtCAaJ4NABXepLJGK4o162.png

# 设置域名，在java代码中获取，这里是资源配置
website:
  domain-name: capturez.xyz